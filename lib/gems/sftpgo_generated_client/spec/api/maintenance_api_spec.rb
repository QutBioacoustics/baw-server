=begin
#SFTPGo

#SFTPGo REST API

The version of the OpenAPI document: 2.0.0

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 5.0.0-SNAPSHOT

=end

require 'spec_helper'
require 'json'

# Unit tests for SftpgoGeneratedClient::MaintenanceApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'MaintenanceApi' do
  before do
    # run before each test
    @api_instance = SftpgoGeneratedClient::MaintenanceApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of MaintenanceApi' do
    it 'should create an instance of MaintenanceApi' do
      expect(@api_instance).to be_instance_of(SftpgoGeneratedClient::MaintenanceApi)
    end
  end

  # unit tests for dumpdata
  # Backup SFTPGo data serializing them as JSON
  # The backup is saved to a local file to avoid to expose users hashed passwords over the network. The output of dumpdata can be used as input for loaddata
  # @param output_file Path for the file to write the JSON serialized data to. This path is relative to the configured \&quot;backups_path\&quot;. If this file already exists it will be overwritten
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :indent indent:   * &#x60;0&#x60; no indentation. This is the default   * &#x60;1&#x60; format the output JSON 
  # @return [ApiResponse]
  describe 'dumpdata test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for loaddata
  # Restore SFTPGo data from a JSON backup
  # Users and folders will be restored one by one and the restore is stopped if a user/folder cannot be added or updated, so it could happen a partial restore
  # @param input_file Path for the file to read the JSON serialized data from. This can be an absolute path or a path relative to the configured \&quot;backups_path\&quot;. The max allowed file size is 10MB
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :scan_quota Quota scan:   * &#x60;0&#x60; no quota scan is done, the imported users will have used_quota_size and used_quota_files &#x3D; 0 or the existing values if they already exists. This is the default   * &#x60;1&#x60; scan quota   * &#x60;2&#x60; scan quota if the user has quota restrictions 
  # @option opts [Integer] :mode 
  # @return [ApiResponse]
  describe 'loaddata test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
