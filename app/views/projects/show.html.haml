- content_for :meta_title, "Project #{@project.name}"
- content_for :page_title do
  = @project.name
  %small
    Project

= render partial: 'shared/sidebar_project', locals: {project: @project}

.col-sm-12
  .row
    .col-sm-4
      .thumbnail
        = image_tag @project.image.url(:span3), alt: @project.name
    .col-sm-8
      %p= @project.description
  .row
    .col-sm-12
      %h3
        Sites

  .row
    .col-sm-6
      %ul.list-group
        - NaturalSort.sort(@project.sites, :name).each do |site|
          %li.list-group-item
            .media
              .media-left
                %a{href: project_site_path(@project, site)}
                  = image_tag site.image.url(:span1), alt: site.name, class: 'media-object'
              .media-body
                %h4.media-heading
                  = link_to truncate(site.name, length: 45, separator: ' '), project_site_path(@project, site)
                %ul.nav.nav-pills.pull-right{style: 'margin-bottom:0'}
                  %li
                    %a{href: project_site_path(@project, site)}
                      %span.fa.fa-info-circle{aria: {hidden: 'true'}}
                      Details
                  - play_details = site.get_bookmark_or_recording
                  - unless play_details.nil?
                    %li
                      %a{href: make_listen_path(play_details[:audio_recording], play_details[:start_offset_seconds])}
                        %span.fa.fa-play-circle{aria: {hidden: 'true'}}
                        Play
                  - else
                    %li
                      %a{href: '#', title: 'No audio recordings in this site', data: {toggle: 'tooltip',  placement: 'top'}}
                        No audio
                  %li
                    %a{href: make_visualise_path(site)}
                      %span.fa.fa-eye{aria: {hidden: 'true'}}
                      Visualise

    .col-sm-6
      - if @project.sites.select { |site| !site.longitude.blank? && !site.latitude.blank? }.length > 0
        = gmaps(markers: {data: @markers}, map_options: {zoom: 7, auto_zoom: true})
        = content_for(:scripts)
      - else
        .map-placeholder
          %span.map-placeholder-text No locations specified.

- content_for :right_sidebar do
  = render partial: 'shared/sidebar_metadata_user_created', locals: { item: @project }
  = render partial: 'shared/sidebar_metadata_user_updated', locals: { item: @project }
  = render partial: 'shared/sidebar_metadata', locals: {title: 'Notes', text: @project.notes}
  = render partial: 'shared/sidebar_metadata', locals: {title: 'Urn', text: @project.urn}
  - level = Access::Query.level_project(current_user, @project)
  - unless level.blank?
    - level_name = Access::Core.get_level_name(level)
    = render partial: 'shared/sidebar_metadata', locals: {title: 'Your access level', text: level_name}

-# include markerwithlabel.js
%script
  =raw File.read(File.join(File.dirname(__FILE__),'..','..','assets','javascripts','gmaps4rails','markerwithlabel.js'))

:javascript
  Gmaps.map.callback = function() {
    for (var i = 0; i <  this.markers.length; ++i) {
      var oldMarker = Gmaps.map.markers[i].serviceObject;
      oldMarker.setMap(null);
      Gmaps.map.clearMarker(Gmaps.map.markers[i]);
      Gmaps.map.markers[i] = new MarkerWithLabel({
        position: oldMarker.position,
        draggable: false,
        raiseOnDrag: false,
        map: Gmaps.map.map,
        labelContent: oldMarker.title,
        title: oldMarker.title,
        labelAnchor: new google.maps.Point(-9, 34),
        labelClass: "labels", // the CSS class for the label
        labelStyle: {opacity: 1.0}
      });

    }
  };