# This file was generated by the `rspec --init` command. Conventionally, all
# specs live under a `spec` directory, which RSpec adds to the `$LOAD_PATH`.
# Require this file using `require "spec_helper"` to ensure that it is only
# loaded once.
#
# See http://rubydoc.info/gems/rspec-core/RSpec/Core/Configuration

ENV['RUNNING_RSPEC'] = 'yes'

require 'simplecov'

if ENV['TRAVIS']
  require 'codeclimate-test-reporter'

  # code climate
  CodeClimate::TestReporter.configure do |config|
    config.logger.level = Logger::WARN
  end
  CodeClimate::TestReporter.start

  SimpleCov.formatter = SimpleCov::Formatter::MultiFormatter[
      CodeClimate::TestReporter::Formatter
  ]

else
  SimpleCov.formatter = SimpleCov::Formatter::MultiFormatter[
      SimpleCov::Formatter::HTMLFormatter
  ]
end

# start code coverage
SimpleCov.start

require 'zonebie'
require 'fakeredis'
require 'fakeredis/rspec'
require 'active_support/all'
require 'webmock/rspec'

require 'baw-workers'

WebMock.disable_net_connect!(allow: 'codeclimate.com')

# include shared_context
Dir[File.join(File.dirname(__FILE__), 'support', '**', '*.rb')].each { |file| require file }

# include rake tasks
require 'rake'

def reset_settings
  # ensure each test has a completely clean slate to start
  tmp_logs_dir = File.expand_path('./tmp/logs/')
  custom_dir = File.expand_path('./tmp/custom_temp_dir')
  tmp_custom_dir = File.expand_path('./tmp/custom_temp_dir/temp')
  tmp_working_dir = File.expand_path('./tmp/custom_temp_dir/working')
  tmp_programs_dir = File.expand_path('./tmp/programs')

  FileUtils.rm_rf('./tmp/')

  FileUtils.mkpath([tmp_logs_dir, custom_dir, tmp_custom_dir, tmp_working_dir])

  # provide access to default settings file
  RSpec.configuration.add_setting :default_settings_path

  settings_file_src =  File.expand_path(File.join(File.dirname(__FILE__), '..', 'lib', 'settings', 'settings.default.yml'))
  settings_file_dest =  File.expand_path(File.join(File.dirname(__FILE__), '..', 'tmp', 'settings.default.yml'))

  FileUtils.cp(settings_file_src, settings_file_dest)

  # create programs dir and copy in echo
  FileUtils.mkpath(tmp_programs_dir)
  RSpec.configuration.default_settings_path = settings_file_dest

  # copy echo into programs dir
  FileUtils.cp('/bin/echo', File.join(tmp_programs_dir,'echo'))

  touch_path = %x(which touch).strip
  FileUtils.cp(touch_path, File.join(tmp_programs_dir,'touch'))

  [tmp_logs_dir, custom_dir]
end

RSpec.configure do |config|
  config.run_all_when_everything_filtered = true
  config.filter_run :focus

  config.expect_with :rspec do |c|
    c.syntax = [:should, :expect]
  end

  # Run specs in random order to surface order dependencies. If you find an
  # order dependency and want to debug it, you can fix the order by providing
  # the seed, which is printed after each run.
  #     --seed 1234
  config.order = 'random'

  #config.profile_examples = 20

  Zonebie.set_random_timezone

  # indicate that webmock requests were successful
  WebMock.after_request do |request_signature, response|
    BawWorkers::Config.logger_worker.debug('respec-config') {
      "Request #{request_signature} was made and #{response.inspect} was returned"
    }
  end

  config.before(:suite) do
    # include rake tasks and environment task
    Dir[File.join(File.dirname(__FILE__), '..', 'lib', 'tasks', '*.rake')].each do |file|
      Rake.application.rake_require File.join('tasks', File.basename(file, File.extname(file)))
    end
    Rake::Task.define_task(:environment)

  end

  config.after(:suite) do
    # redirect stdout and stderr to console
    # this ensures that the green dots and red Fs from rspec are sent to the console
    $stdout = STDOUT
    $stderr = STDERR
  end

  config.before(:each) do

    reset_settings

    BawWorkers::Config.run(settings_file: config.default_settings_path, redis: true, resque_worker: false)
  end

  config.after(:each) do
    ActionMailer::Base.deliveries.clear
  end

end
