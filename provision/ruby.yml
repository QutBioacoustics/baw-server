---

- name: APT | Add ubuntu_rvm's APT repository
  apt_repository:
    repo: 'ppa:rael-gc/rvm'
    state: present
    update_cache: yes
  become: true


- name: APT | Software properties common
  apt:
    pkg: "{{ item }}"
    state: present
  with_items:
    - software-properties-common
    - rvm
  register: rvm_installed
  become: true

# Have to force a disconnect to make sure we're in rvm group
# Bug in Ansible https://github.com/ansible/ansible/issues/27520
# for now we just have to run vagrant provision twice
#- name: META | reset ssh connection to allow user changes to affect 'current login user'
#  meta: reset_connection
#  when: rvm_installed.changed

- name: SHELL | Query groups vagrant user is in
  shell: groups
  register: user_groups

- name: ASSERT | That vagrant user is in rvm group!
  assert:
    that:
      - "'rvm' in user_groups.stdout"

# Despite the fact that the rvm ubuntu package installs as mixed mode, it's still easier for us to use a single-user
# installation!

- name: Switch to single-user mode
  command: '{{ rvm_path }} user all'

# The following is lifted from the rvm1-ansible role

- name: Detect if rubies are installed
  command: '{{ rvm_path }} {{ item }} do true'
  changed_when: false
  failed_when: false
  register: detect_rubies
  with_items: '{{ rvm_rubies }}'
  when: rvm_rubies

- name: Install rubies
  command: '{{ rvm_path }} install {{ item.item }}'
  when: rvm_rubies and item.rc|default(0) != 0
  with_items: '{{ detect_rubies.results }}'

- name: Detect default ruby version
  command: '{{ rvm_path }} alias list default'
  changed_when: false
  register: detect_default_ruby_version

- name: Select default ruby
  command: '{{ rvm_path }} alias create default {{ rvm_default_ruby_version }}'
  when: detect_default_ruby_version.stdout|default() == '' or
        rvm_default_ruby_version not in detect_default_ruby_version.stdout

- name: Detect installed ruby patch number
  shell: >
    {{ rvm_path }} list strings | grep {{ item }} | tail -n 1
  with_items: '{{ rvm_rubies }}'
  changed_when: false
  register: ruby_patch
  check_mode: no # Run in normal mode when in --check mode (http://docs.ansible.com/ansible/playbooks_checkmode.html)

- name: Install bundler if not installed
  shell: >
    ls /home/vagrant/.rvm/rubies/{{ item.stdout }}/bin
    | if ! grep "^bundler " ; then /home/vagrant/.rvm/rubies/{{ item.stdout }}/bin/gem install bundler ; fi
  args:
    creates: '/home/vagrant/.rvm/rubies/{{ item.stdout }}/bin/bundler'
  with_items: '{{ ruby_patch.results }}'
  register: bundler_install
  changed_when: '"Successfully installed bundler" in bundler_install.stdout'
  tags: ["rvm_bundler_install"]